# parameters
nc: 10  # number of classes
depth_multiple: 1.0  # model depth multiple
width_multiple: 1.0  # layer channel multiple

# anchors
anchors:
  - [12,15, 30,15, 15,30]
  - [56,19, 28,43, 93,30]
  - [46,95, 167,48, 110,155]
  - [383,136, 286,354, 609,255]

# yolov7 backbone
backbone:
  # [from, number, module, args]
  # from: 当前层的输入是来自哪一层
  # number:当前模块的数量
  # module: 该层的模块类型
  # args: 创建该层对应模块时需要传入的参数
  # 第一层是一个卷积层，[32, 3, 1]三个参数就分别表示[这一层的输出通道数，卷积核的尺寸，卷积核的步长]
  [[-1, 1, Conv, [32, 3, 1]],  # 0

   [-1, 1, Conv, [64, 3, 2]],   # 1-P1/2
   [-1, 1, Conv, [64, 3, 1]],   # 2

   [-1, 1, Conv, [128, 3, 2]],  # 3-P2/4
   #-----------ELANBlock (4-11层)-----------
   [-1, 1, Conv, [64, 1, 1]],   # 4
   [-2, 1, Conv, [64, 1, 1]],   # 5
   [-1, 1, Conv, [64, 3, 1]],   # 6
   [-1, 1, Conv, [64, 3, 1]],   # 7
   [-1, 1, Conv, [64, 3, 1]],   # 8
   [-1, 1, Conv, [64, 3, 1]],   # 9
   [[-1, -3, -5, -6], 1, Concat, [1]],  # 10
   [-1, 1, Conv, [256, 1, 1]],  # 11  1×1的卷积
   #-----------ELANBlock (4-11层)-----------

   #--------MaxPoolConvBlock (12-16层)-------
   [-1, 1, MP, []],   # 12
   [-1, 1, Conv, [128, 1, 1]],  # 13
   [-3, 1, Conv, [128, 1, 1]],  # 14
   [-1, 1, Conv, [128, 3, 2]],  # 15
   [[-1, -3], 1, Concat, [1]],  # 16-P3/8
   #--------MaxPoolConvBlock  (12-16层)-------

   #-----------ELANBlock (17-24层)-----------
   [-1, 1, Conv, [128, 1, 1]],  # 17
   [-2, 1, Conv, [128, 1, 1]],  # 18
   [-1, 1, Conv, [128, 3, 1]],  # 19
   [-1, 1, Conv, [128, 3, 1]],  # 20
   [-1, 1, Conv, [128, 3, 1]],  # 21
   [-1, 1, Conv, [128, 3, 1]],  # 22
   [[-1, -3, -5, -6], 1, Concat, [1]],  # 23
   [-1, 1, Conv, [512, 1, 1]],  # 24
   #-----------ELANBlock (17-24层)-----------

   #--------MaxPoolConvBlock (25-29层)-------
   [-1, 1, MP, []], # 25
   [-1, 1, Conv, [256, 1, 1]],  # 26
   [-3, 1, Conv, [256, 1, 1]],  # 27
   [-1, 1, Conv, [256, 3, 2]],  # 28
   [[-1, -3], 1, Concat, [1]],  # 29-P4/16
   #--------MaxPoolConvBlock (25-29层)-------

   #-----------ELANBlock (30-37层)-----------
   [-1, 1, Conv, [256, 1, 1]],  # 30
   [-2, 1, Conv, [256, 1, 1]],  # 31
   [-1, 1, Conv, [256, 3, 1]],  # 32
   [-1, 1, Conv, [256, 3, 1]],  # 33
   [-1, 1, Conv, [256, 3, 1]],  # 34
   [-1, 1, Conv, [256, 3, 1]],  # 35
   [[-1, -3, -5, -6], 1, Concat, [1]],  # 36
   [-1, 1, Conv, [1024, 1, 1]],  # 37
   #-----------ELANBlock (30-37层)-----------

   #--------MaxPoolConvBlock (38-42层)-------
   [-1, 1, MP, []], # 38
   [-1, 1, Conv, [512, 1, 1]], # 39
   [-3, 1, Conv, [512, 1, 1]],  # 40
   [-1, 1, Conv, [512, 3, 2]],  # 41
   [[-1, -3], 1, Concat, [1]],  # 42-P5/32
   #--------MaxPoolConvBlock (38-42层)-------

   #-----------ELANBlock (43-50层)-----------
   [-1, 1, Conv, [256, 1, 1]],  # 43
   [-2, 1, Conv, [256, 1, 1]],  # 44
   [-1, 1, Conv, [256, 3, 1]],  # 45
   [-1, 1, Conv, [256, 3, 1]],  # 46
   [-1, 1, Conv, [256, 3, 1]],  # 47
   [-1, 1, Conv, [256, 3, 1]],  # 58
   [[-1, -3, -5, -6], 1, Concat, [1]],  # 49
   [-1, 1, Conv, [1024, 1, 1]],  # 50
   #-----------ELANBlock (43-50层)-----------
  ]

# yolov7 head
head:
  [[-1, 1, SPPCSPC, [512]], # 51

   [-1, 1, Conv, [256, 1, 1]], # 52
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],  # 53
   [37, 1, Conv, [256, 1, 1]], # 54-route backbone P4
   [[-1, -2], 1, Concat, [1]], # 55，把53层和54层的输出进行了拼接

   #-----------ELANBlock' (56-63层)-----------
   # 画出来的ELAN'图和Backbone部分的ELAN图不一致，可以看做是ELAN的变形
   [-1, 1, Conv, [256, 1, 1]], # 56
   [-2, 1, Conv, [256, 1, 1]], # 57
   [-1, 1, Conv, [128, 3, 1]], # 58
   [-1, 1, Conv, [128, 3, 1]], # 59
   [-1, 1, Conv, [128, 3, 1]], # 60
   [-1, 1, Conv, [128, 3, 1]], # 61
   [[-1, -2, -3, -4, -5, -6], 1, Concat, [1]], # 62
   [-1, 1, Conv, [256, 1, 1]], # 63
   #-----------ELANBlock' (56-63层)-----------

   [-1, 1, Conv, [128, 1, 1]], # 64
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],  # 65
   [24, 1, Conv, [128, 1, 1]], # 66-route backbone P3
   [[-1, -2], 1, Concat, [1]], # 67

   #-----------ELANBlock' (68-75层)-----------
   [-1, 1, Conv, [128, 1, 1]], # 68
   [-2, 1, Conv, [128, 1, 1]], # 69
   [-1, 1, Conv, [64, 3, 1]],  # 70
   [-1, 1, Conv, [64, 3, 1]],  # 71
   [-1, 1, Conv, [64, 3, 1]],  # 72
   [-1, 1, Conv, [64, 3, 1]],  # 73
   [[-1, -2, -3, -4, -5, -6], 1, Concat, [1]],  # 74
   [-1, 1, Conv, [128, 1, 1]], # 75
   #-----------ELANBlock'  (68-75层)-----------

   #以下是我们的项目添加的四尺度模型
   [-1, 1, Conv, [64, 1, 1]], # 76
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],  # 77
   [11, 1, Conv, [64, 1, 1]], # 78-route backbone P3
   [[-1, -2], 1, Concat, [1]], # 79
   #-----------ELANBlock' (80-87层)-----------
   [-1, 1, Conv, [64, 1, 1]], # 80
   [-2, 1, Conv, [64, 1, 1]], # 81
   [-1, 1, Conv, [32, 3, 1]], # 82
   [-1, 1, Conv, [32, 3, 1]], # 83
   [-1, 1, Conv, [32, 3, 1]], # 84
   [-1, 1, Conv, [32, 3, 1]], # 85
   [[-1, -2, -3, -4, -5, -6], 1, Concat, [1]], # 86
   [-1, 1, Conv, [64, 1, 1]], # 87
   #-----------ELANBlock'  (80-87层)-----------
   #--------MaxPoolConvBlock-2 (88-92层)-------
   [-1, 1, MP, []], # 88
   [-1, 1, Conv, [64, 1, 1]], # 89
   [-3, 1, Conv, [64, 1, 1]], # 90
   [-1, 1, Conv, [64, 3, 2]], # 91
   #--------MaxPoolConvBlock-2 (76-91层)-------
   [[-1, -3, 75], 1, Concat, [1]], # 92

   #-----------ELANBlock' (93-100层)-----------
   [ -1, 1, Conv, [ 128, 1, 1 ] ], # 93
   [ -2, 1, Conv, [ 128, 1, 1 ] ], # 94
   [ -1, 1, Conv, [ 64, 3, 1 ] ], # 95
   [ -1, 1, Conv, [ 64, 3, 1 ] ], # 96
   [ -1, 1, Conv, [ 64, 3, 1 ] ], # 97
   [ -1, 1, Conv, [ 64, 3, 1 ] ], # 98
   [ [ -1, -2, -3, -4, -5, -6 ], 1, Concat, [ 1 ] ], # 99
   [ -1, 1, Conv, [ 128, 1, 1 ] ], # 100
   #-----------ELANBlock'  (93-100层)-----------
   #以上是项目添加的四尺度模型

   #--------MaxPoolConvBlock-2 (101-104层)-------
   [-1, 1, MP, []], # 76 - 101
   [-1, 1, Conv, [128, 1, 1]], # 77 - 102
   [-3, 1, Conv, [128, 1, 1]], # 78 - 103
   [-1, 1, Conv, [128, 3, 2]], # 79 - 104
   #--------MaxPoolConvBlock-2 (101-104层)-------
   [[-1, -3, 63], 1, Concat, [1]], # 80 -105

   #-----------ELANBlock' (106-113层)-----------
   [-1, 1, Conv, [256, 1, 1]], # 81 - 106
   [-2, 1, Conv, [256, 1, 1]], # 82 - 107
   [-1, 1, Conv, [128, 3, 1]], # 83 - 108
   [-1, 1, Conv, [128, 3, 1]], # 84 - 109
   [-1, 1, Conv, [128, 3, 1]], # 85 - 110
   [-1, 1, Conv, [128, 3, 1]], # 86 - 111
   [[-1, -2, -3, -4, -5, -6], 1, Concat, [1]], # 87 - 112
   [-1, 1, Conv, [256, 1, 1]], # 88 - 113
   #-----------ELANBlock' (106-113层)-----------

   #--------MaxPoolConvBlock-2 (114-117层)-------
   [-1, 1, MP, []], # 89 - 114
   [-1, 1, Conv, [256, 1, 1]], # 90 - 115
   [-3, 1, Conv, [256, 1, 1]], # 91 - 116
   [-1, 1, Conv, [256, 3, 2]], # 92 - 117
   #--------MaxPoolConvBlock-2 (114-116层)-------
   [[-1, -3, 51], 1, Concat, [1]], # 93 - 118

   #-----------ELANBlock' (119-126层)-----------
   [-1, 1, Conv, [512, 1, 1]], # 94 - 119
   [-2, 1, Conv, [512, 1, 1]], # 95 - 120
   [-1, 1, Conv, [256, 3, 1]], # 96 - 121
   [-1, 1, Conv, [256, 3, 1]], # 97 - 122
   [-1, 1, Conv, [256, 3, 1]], # 98 - 123
   [-1, 1, Conv, [256, 3, 1]], # 99 - 124
   [[-1, -2, -3, -4, -5, -6], 1, Concat, [1]], # 100 - 125
   [-1, 1, Conv, [512, 1, 1]], # 101 - 126
   #-----------ELANBlock' (119-126层)-----------

   #[75, 1, RepConv, [256, 3, 1]], # 102
   #[88, 1, RepConv, [512, 3, 1]], # 103
   #[101, 1, RepConv, [1024, 3, 1]], # 104
    [87, 1, RepConv, [128, 3, 1]], # 102 - 127
    [100, 1, RepConv, [256, 3, 1]], # 102 - 128
    [113, 1, RepConv, [512, 3, 1]], # 103 - 129
    [126, 1, RepConv, [1024, 3, 1]], # 104 - 130

   [[127,128,129,130], 1, IDetect, [nc, anchors]],   # Detect(P3, P4, P5)
  ]
